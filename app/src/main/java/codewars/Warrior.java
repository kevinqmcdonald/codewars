/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package codewars;

import java.util.ArrayList;

public class Warrior {

  private int level;
  private WarriorRank rank;
  private int experience;
  private final ArrayList<String> achievements;

  public Warrior() {
    level = 1;
    rank = WarriorRank.PUSHOVER;
    experience = 100;
    achievements = new ArrayList<>();
  }

  public int level() {
    return level;
  }

  public String rank() {
    return rank.title;
  }

  public int experience() {
    return experience;
  }

  public ArrayList<String> achievements() {
    return achievements;
  }

  private void earnExperience(int experienceEarned) {
    experience = Math.min(experience + experienceEarned, 10000);
    level = experience / 100;
    rank = WarriorRank.getRankForLevel(level);
  }

  public String battle(int enemyLevel) {
    if (enemyLevel < 1 || enemyLevel > 100) {
      return "Invalid level";
    }

    // Can't beat an enemy this much stronger than you
    if(rank.rank < WarriorRank.getRankForLevel(enemyLevel).rank && level <= enemyLevel - 5) {
      return "You've been defeated";
    }

    if(level >= enemyLevel + 2) {
      // Easy fight, no exp earned
      return "Easy fight";
    } else if(level == enemyLevel + 1 || level == enemyLevel) {
      // A good fight
      if(level == enemyLevel) earnExperience(10);
      else earnExperience(5);
      return "A good fight";
    } else {
      // An intense fight
      int diff = enemyLevel - level;
      earnExperience(20 * diff * diff);
      return "An intense fight";
    }
  }

  public String training(String description, int experienceEarned, int minLevel) {
    if(level < minLevel) {
      return "Not strong enough";
    }

    earnExperience(experienceEarned);
    achievements.add(description);
    return description;
  }

  private enum WarriorRank {
    PUSHOVER("Pushover", 0),
    NOVICE("Novice", 1),
    FIGHTER("Fighter", 2),
    WARRIOR("Warrior",3),
    VETERAN("Veteran", 4),
    SAGE("Sage", 5),
    ELITE("Elite", 6),
    CONQUEROR("Conqueror", 7),
    CHAMPION("Champion", 8),
    MASTER("Master", 9),
    GREATEST("Greatest", 10);

    private final String title;
    private final int rank;

    WarriorRank(String title, int rank) {
      this.title = title;
      this.rank = rank;
    }

    public static WarriorRank getRankForLevel(int level) {
      if(level == 100) {
        return WarriorRank.GREATEST;
      } else if(level >= 90) {
        return WarriorRank.MASTER;
      } else if(level >= 80) {
        return WarriorRank.CHAMPION;
      } else if(level >= 70) {
        return WarriorRank.CONQUEROR;
      } else if(level >= 60) {
        return WarriorRank.ELITE;
      } else if(level >= 50) {
        return WarriorRank.SAGE;
      } else if(level >= 40) {
        return WarriorRank.VETERAN;
      } else if(level >= 30) {
        return WarriorRank.WARRIOR;
      } else if(level >= 20) {
        return WarriorRank.FIGHTER;
      } else if(level >= 10) {
        return WarriorRank.NOVICE;
      } else {
        return WarriorRank.PUSHOVER;
      }
    }
  }
}
